#!/bin/zsh

# Zsh root
ZSHAREDIR=$HOME/.local/share/zsh-nix

git_current_branch() {
	git -C "$1" branch | sed  '/^\*/!d;s/\* //'
}

# git alias
alias ga='git add'
alias gck='git checkout'
alias gcl='git clone --recurse-submodules'
alias gc='git commit --verbose'
alias gc!='git commit --verbose --amend'
alias gstall='git stash --all'
alias gstp='git stash pop'
alias gst='git status'
alias gpr='git pull --rebase'
alias gsu='git submodule update'
alias gsi='git submodule init'
alias gck="git checkout";
alias gsu="git submodule update --remote";
alias gft="git difftool --no-symlinks --dir-diff";
alias glg="git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all";
alias ggpush='git push origin "$(git_current_branch)"';

alias cd="z";
alias ea="eza -la --git --git-repos-no-status --classify=always";
alias ll="lsd -la";
# alias ea="lsd -la";
# achrome="open -n /Applications/Google\ Chrome\ Dev.app/ --args --disable-web-security  --user-data-dir=/Users/rick/Downloads/chromeDevData";
alias icat="kitty +kitten icat";
alias vim="nvim";
alias tma="tmux a";
alias tml="tmux ls";
alias tmk="tmux kill-server";
alias lg="lazygit";
alias pm="pnpm";
alias achrome="open -n /Applications/Google\ Chrome\ Dev.app/ --args --disable-web-security  --user-data-dir=/Users/rick/Downloads/chromeDevData";
alias showFiles="defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder";
alias hideFiles="defaults write com.apple.finder AppleShowAllFiles -boolean false ; killall Finder";
alias brewcl="brew cleanup -s --prune=all";
alias brewup="brew upgrade; brewcl";
alias fly="env https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890";
alias fle="export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890";
alias cnpm="npm --registry=https://registry.npmmirror.com  --cache=$HOME/.npm/.cache/cnpm  --disturl=https://npmmirror.com/mirrors/node  --userconfig=$HOME/.cnpmrc";
alias f="yazi";
alias s="kitty +kitten ssh";
alias compose-update="docker compose down && docker compose pull && docker compose up -d";
alias compose-update-sudo="sudo docker compose down && sudo docker compose pull && sudo docker compose up -d";

alias dud="dust -D -d 1";

cowsay "Welcome, Human."

clean_up() {
	echo "cleaning yarn cache..."
	echo
	yarn cache clean
	echo
	echo "cleaning npm cache..."
	echo
	npm cache clean --force
	echo
	echo "cleaning pnpm cache..."
	echo
	pnpm store prune
	echo
	echo "cleaning pod cache..."
	echo
	pod cache clean --all
	echo
	echo "cleaning brew cache..."
	echo
	brew cleanup --prune=all; brew autoremove
	echo
	echo "cleaning gradle cache..."
	echo
	rm -rf ~/.gradle/caches
	echo
	echo "cleaning xcode cache..."
	echo
	rm -rf ~/Library/Developer/Xcode/DerivedData
	rm -rf ~/Library/Developer/Xcode/Archives
}

performace_test(){
	hyperfine --runs 10 'zsh -i -c exit'
}

rs() {
		if [ "$#" -lt 1 ]; then
        echo "Usage: remote-ssh <host> [additional ssh options]"
        return 1
    fi

    local host=$1
    shift 1
    local start_port=3000
    local end_port=3100
    local forwards=""

    for port in {$start_port..$end_port}; do
        forwards+="-L ${port}:localhost:${port} "
    done

    # echo "Connecting to $host with port forwards $start_port through $end_port..."
    # echo "ssh ${host} ${forwards} $@"
    eval ssh ${host} ${forwards} $@
}

convert_to_hevc() {
  input_filename=$1
  
  if [[ -z "$input_filename" ]]; then
    echo "Usage: convert_to_hevc <input_filename>"
    return 1
  fi

  # if [[ ! -f "$input_filename" ]]; then
  #   echo "Error: File '$input_filename' not found."
  #   return 1
  # fi

  output_filename="hevc_${input_filename}"
  ffmpeg -i $input_filename -c:v hevc_videotoolbox -crf 28 $output_filename
  
  echo "Output generated: $output_filename"
}
